PERGUNTA 5
Vamos lá, 5. É bobagem as pessoas acharem que o bom desenvolvedor ele coda tudo do zero da cabeça dele e depois ele vai lá e faz um merge na branch principal e beleza, ele cria a branch dele e coda tudo do zero como se não houvesse amanhã e tá tudo sob controle. Não, isso não acontece desse jeito. Quem diz que faz assim? Está mentindo para você. O que acontece é o seguinte. Você faz uma branch sua, né? Você recebe a tarefa que você precisa fazer, né? Aí o que você faz? Em primeiro lugar, você não vai codar. Você precisa entender aquilo que você precisa fazer no contexto do negócio. Senão a quantidade de refaturações que você vai ter que fazer porque você não entendeu a função principal daquela feature que você está desenvolvendo é muito grande. Então, em primeiro lugar, você precisa refatorar, você precisa ir lá e conversar com as pessoas de negócio, tipo assim, o que é isso daqui que vocês estão fazendo? Esse é o primeiro passo para escrever bom código. Bom código é aquele que entende porque ele está sendo escrito. Em segundo lugar, depois que eu escrevi o código, antes de mandar para a aprovação para qualquer pessoa, eu pego meu código, eu colo meu código no chat APT e eu digo, avalie este código com relação a estruturas de dados, alocações de memória, performance, e me dê sugestões de como eu posso transformar este código em algo mais performático, mais inteligente e mais simples. Bem, às vezes o ChatAPT me dá coisas certas, erradas, mas, afinal das contas, as soluções que o ChatAPT te traz, você sempre tem que pegar e avaliar, dar uma pesquisada também na internet, no Stack Overflow, no GitHub, enfim. Então, essas são ferramentas que a gente tem que usar para melhorar a qualidade do código. Não tem jeito. Quais outros controles naturais existem para você melhorar a qualidade do código? Bem, controles de projeto. Ou seja, nenhum ticket, que a gente chama, as empresas têm denominações diferentes, nenhuma task, por exemplo, você dá um merge nela na branch principal, na branch do release, você nunca vai fazer isso sem antes ter aprovação de no mínimo dois desenvolvedores. Você tem, por exemplo, ferramentas também como o SonarLint, que ele vai te dizer, ó, esse código aqui está mal escrito, isso aqui não atende às especificações do CleanCode, por exemplo. E você precisa aprovar isso com outros dois profissionais. Como que você faz isso? Quando você cria um pull request para jogar isso na branch principal, você só aprova um. Ele tem que buildar. Ou seja, o projeto tem que ser compilado numa máquina virtual que roda este projeto e que garante que todos os testes sejam atendidos corretamente. Ele fez isso? Fez isso. Pô, legal. Coisa boa. Então, a primeira provação tá feita o sinal a gente deu algum erro absurdo tipo pelo amor de Deus para que vocês estão fazendo não então pode seguir não tem problema o aí você passa por aprovação de código você faz uma cor do Brasil olha se estrutura de dados aqui eu sempre motivo esse código está estruturado desse jeito as variáveis tem esses nomes, por tais motivos, e depois você tem uma revisão de negócio ainda. Em terceiro lugar, você ainda tem um Quality Assurance, que é um QA, no nosso caso um QA indiano, ele pega o seu código, ele não tem contato com você, ele pega o seu código, olha, e fala assim, ah, tá bom, tem que melhorar isso aqui, tem certeza que é assim, tem certeza que é assim, tá, beleza, então, aí, então assim, tem vários controles até você chegar na conclusão de uma tarefa de desenvolvimento de software